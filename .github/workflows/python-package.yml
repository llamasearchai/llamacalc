name: Python Package

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov flake8 mypy black isort
        pip install -e ".[dev]"
    - name: Lint with flake8
      run: |
        flake8 src tests
    - name: Check formatting with black
      run: |
        black --check src tests
    - name: Sort imports with isort
      run: |
        isort --check-only --profile black src tests
    - name: Type check with mypy
      run: |
        mypy src
    - name: Test with pytest
      run: |
        pytest --cov=llamacalc tests/

  build:
    needs: test
    runs-on: ubuntu-latest
    if: success() && startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine wheel
    - name: Build package
      run: |
        python -m build
    - name: Check package with twine
      run: |
        twine check dist/*
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish to PyPI
      if: success()
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }} 